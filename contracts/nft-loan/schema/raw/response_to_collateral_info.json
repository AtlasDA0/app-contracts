{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CollateralResponse",
  "type": "object",
  "required": [
    "borrower",
    "collateral",
    "loan_id",
    "loan_state"
  ],
  "properties": {
    "borrower": {
      "type": "string"
    },
    "collateral": {
      "$ref": "#/definitions/CollateralInfo"
    },
    "loan_id": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "loan_state": {
      "$ref": "#/definitions/LoanState"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AssetInfo": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "cw721_coin"
          ],
          "properties": {
            "cw721_coin": {
              "$ref": "#/definitions/Cw721Coin"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "coin"
          ],
          "properties": {
            "coin": {
              "$ref": "#/definitions/Coin"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "sg721_token"
          ],
          "properties": {
            "sg721_token": {
              "$ref": "#/definitions/Sg721Token"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "CollateralInfo": {
      "type": "object",
      "required": [
        "associated_assets",
        "list_date",
        "offer_amount",
        "state"
      ],
      "properties": {
        "active_offer": {
          "type": [
            "string",
            "null"
          ]
        },
        "associated_assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetInfo"
          }
        },
        "comment": {
          "type": [
            "string",
            "null"
          ]
        },
        "list_date": {
          "$ref": "#/definitions/Timestamp"
        },
        "loan_preview": {
          "anyOf": [
            {
              "$ref": "#/definitions/AssetInfo"
            },
            {
              "type": "null"
            }
          ]
        },
        "offer_amount": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "start_block": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "state": {
          "$ref": "#/definitions/LoanState"
        },
        "terms": {
          "anyOf": [
            {
              "$ref": "#/definitions/LoanTerms"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Cw721Coin": {
      "type": "object",
      "required": [
        "address",
        "token_id"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "token_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LoanState": {
      "type": "string",
      "enum": [
        "published",
        "started",
        "defaulted",
        "ended",
        "inactive"
      ]
    },
    "LoanTerms": {
      "type": "object",
      "required": [
        "duration_in_blocks",
        "interest",
        "principle"
      ],
      "properties": {
        "duration_in_blocks": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "interest": {
          "$ref": "#/definitions/Uint128"
        },
        "principle": {
          "$ref": "#/definitions/Coin"
        }
      },
      "additionalProperties": false
    },
    "Sg721Token": {
      "type": "object",
      "required": [
        "address",
        "token_id"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "token_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Timestamp": {
      "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
      "allOf": [
        {
          "$ref": "#/definitions/Uint64"
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
